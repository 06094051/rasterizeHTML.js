{"name":"rasterizeHTML.js","body":"rasterizeHTML.js\r\n================\r\n\r\nRenders HTML into the browser's canvas.\r\n\r\nHow it works\r\n------------\r\n\r\nFor security reasons rendering HTML into a canvas is severly limited. Firefox offers such a function via ctx.drawWindow(), but only with Chrome privileges (see https://developer.mozilla.org/en/Drawing_Graphics_with_Canvas).\r\n\r\nAs described in http://robert.ocallahan.org/2011/11/drawing-dom-content-to-canvas.html and https://developer.mozilla.org/en/HTML/Canvas/Drawing_DOM_objects_into_a_canvas however it is possible by embedding the HTML into an SVG image as a &lt;foreignObject&gt; and then drawing the resulting image via ctx.drawImage().\r\n\r\nTo cope with the existing limitations, rasterizeHTML.js will load external images and stylesheets and store them inline via data: URIs or inline style elements respectively.\r\n\r\nLimitations\r\n-----------\r\n\r\nThis code is experimental.\r\n\r\nSVG is not allowed to link to external resources, as such all used resources need to be embedded using data: URIs. However resources can only be loaded if from the same origin, unless CORS is used.\r\n\r\nThe code is tested under Firefox, Chrome & Safari. However IE is not supported so far.\r\n\r\nAt the time of writing it seems that the individual browsers still have some issues with rendering SVGs with embedded HTML to the canvas. See the [wiki for a list of known issues](https://github.com/cburgmer/rasterizeHTML.js/wiki/Browser-issues) and do add your findings there.\r\n\r\nExample code\r\n------------\r\n```html\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>rasterizeHTML.js example</title>\r\n    <script type=\"text/javascript\" src=\"lib/htmlparser.js\"></script> <!-- Needed for Chrome & Safari to work around buggy XMLSerializer -->\r\n    <script type=\"text/javascript\" src=\"lib/cssParser.js\"></script> <!-- Needed to embed backgroundImages -->\r\n    <script type=\"text/javascript\" src=\"lib/URI.js\"></script> <!-- Needed to calculate paths when embedding stuff -->\r\n    <script type=\"text/javascript\" src=\"rasterizeHTML.js\"></script>\r\n</head>\r\n<body>\r\n    <canvas id=\"canvas\" width=\"400\" height=\"200\"></canvas>\r\n    <script type=\"text/javascript\">\r\n        var canvas = document.getElementById(\"canvas\");\r\n\r\n        rasterizeHTML.drawHTML('Some <span style=\"color: green\">HTML</span> with an image <img src=\"someimg.png\" />', canvas);\r\n    </script>\r\n</body>\r\n</html>\r\n```\r\n","tagline":"Renders HTML into the browser's canvas","google":"UA-6236243-12","note":"Don't delete this file! It's used internally to help with page regeneration."}